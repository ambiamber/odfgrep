<?xml version="1.0" encoding="UTF-8"?>
<office:document-content xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" office:version="1.0"><office:scripts/><office:font-face-decls><style:font-face style:name="StarSymbol" svg:font-family="StarSymbol" style:font-charset="x-symbol"/><style:font-face style:name="Wingdings" svg:font-family="Wingdings" style:font-pitch="variable" style:font-charset="x-symbol"/><style:font-face style:name="Symbol" svg:font-family="Symbol" style:font-family-generic="roman" style:font-pitch="variable" style:font-charset="x-symbol"/><style:font-face style:name="Nimbus Sans L" svg:font-family="&apos;Nimbus Sans L&apos;"/><style:font-face style:name="Times" svg:font-family="Times"/><style:font-face style:name="Courier New" svg:font-family="&apos;Courier New&apos;" style:font-family-generic="modern"/><style:font-face style:name="Cumberland AMT1" svg:font-family="&apos;Cumberland AMT&apos;" style:font-adornments="Regular" style:font-pitch="fixed"/><style:font-face style:name="Cumberland AMT" svg:font-family="&apos;Cumberland AMT&apos;" style:font-family-generic="modern" style:font-pitch="fixed"/><style:font-face style:name="Albany AMT" svg:font-family="&apos;Albany AMT&apos;" style:font-pitch="variable"/><style:font-face style:name="Times New Roman" svg:font-family="&apos;Times New Roman&apos;" style:font-family-generic="roman" style:font-pitch="variable"/><style:font-face style:name="Arial" svg:font-family="Arial" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="Arial Narrow" svg:font-family="&apos;Arial Narrow&apos;" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="CommonBullets" svg:font-family="CommonBullets" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="Tahoma" svg:font-family="Tahoma" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="TheSansMonoConNormal" svg:font-family="TheSansMonoConNormal" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="Trebuchet MS" svg:font-family="&apos;Trebuchet MS&apos;" style:font-family-generic="swiss" style:font-pitch="variable"/></office:font-face-decls><office:automatic-styles><style:style style:name="P1" style:family="paragraph" style:parent-style-name="Chapter_20_Number" style:master-page-name="Standard"/><style:style style:name="P2" style:family="paragraph" style:parent-style-name="Body_20_Text"><style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:text-indent="0in" style:auto-text-indent="false"/></style:style><style:style style:name="P3" style:family="paragraph" style:parent-style-name="Code_20_First" style:list-style-name="L1"/><style:style style:name="P4" style:family="paragraph" style:parent-style-name="Code" style:list-style-name="L1"/><style:style style:name="P5" style:family="paragraph" style:parent-style-name="Code_20_Last" style:list-style-name="L1"/><style:style style:name="P6" style:family="paragraph" style:parent-style-name="Code_20_First" style:list-style-name="L2"/><style:style style:name="P7" style:family="paragraph" style:parent-style-name="Code" style:list-style-name="L2"/><style:style style:name="P8" style:family="paragraph" style:parent-style-name="Code_20_Last" style:list-style-name="L2"/><style:style style:name="P9" style:family="paragraph" style:parent-style-name="Code_20_First" style:list-style-name="L3"/><style:style style:name="P10" style:family="paragraph" style:parent-style-name="Code" style:list-style-name="L3"/><style:style style:name="P11" style:family="paragraph" style:parent-style-name="Code_20_Last" style:list-style-name="L3"/><style:style style:name="P12" style:family="paragraph" style:parent-style-name="Answer"><style:text-properties style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color"/></style:style><style:style style:name="P13" style:family="paragraph" style:parent-style-name="Code_20_First" style:list-style-name="L4"/><style:style style:name="P14" style:family="paragraph" style:parent-style-name="Code" style:list-style-name="L4"/><style:style style:name="P15" style:family="paragraph" style:parent-style-name="code" style:list-style-name="L4"/><style:style style:name="P16" style:family="paragraph" style:parent-style-name="Code_20_Last" style:list-style-name="L4"/><style:style style:name="T1" style:family="text"><style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="T2" style:family="text"><style:text-properties style:text-underline-style="none" fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="T3" style:family="text" style:parent-style-name="Code_20_Inline"><style:text-properties style:text-underline-style="none" fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="T4" style:family="text"><style:text-properties style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color"/></style:style><style:style style:name="T5" style:family="text"><style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T6" style:family="text" style:parent-style-name="Code_20_Inline"><style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T7" style:family="text" style:parent-style-name="Source_20_Text"><style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><text:list-style style:name="L1"><text:list-level-style-number text:level="1" text:style-name="Numbering_20_Symbols" style:num-format="1"><style:list-level-properties text:space-before="0.25in" text:min-label-width="0.25in"/></text:list-level-style-number><text:list-level-style-number text:level="2" text:style-name="Numbering_20_Symbols" style:num-prefix=" " style:num-suffix="." style:num-format="1" text:display-levels="2"><style:list-level-properties text:space-before="0.5in" text:min-label-width="0.25in"/></text:list-level-style-number><text:list-level-style-number text:level="3" text:style-name="Numbering_20_Symbols" style:num-prefix=" " style:num-suffix=")" style:num-format="a"><style:list-level-properties text:space-before="0.75in" text:min-label-width="0.25in"/></text:list-level-style-number><text:list-level-style-bullet text:level="4" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="5" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1.25in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="6" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1.5in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="7" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1.75in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="8" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="2in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="9" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="2.25in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="10" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="2.5in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet></text:list-style><text:list-style style:name="L2"><text:list-level-style-number text:level="1" text:style-name="Numbering_20_Symbols" style:num-format="1"><style:list-level-properties text:space-before="0.25in" text:min-label-width="0.25in"/></text:list-level-style-number><text:list-level-style-number text:level="2" text:style-name="Numbering_20_Symbols" style:num-prefix=" " style:num-suffix="." style:num-format="1" text:display-levels="2"><style:list-level-properties text:space-before="0.5in" text:min-label-width="0.25in"/></text:list-level-style-number><text:list-level-style-number text:level="3" text:style-name="Numbering_20_Symbols" style:num-prefix=" " style:num-suffix=")" style:num-format="a"><style:list-level-properties text:space-before="0.75in" text:min-label-width="0.25in"/></text:list-level-style-number><text:list-level-style-bullet text:level="4" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="5" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1.25in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="6" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1.5in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="7" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1.75in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="8" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="2in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="9" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="2.25in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="10" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="2.5in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet></text:list-style><text:list-style style:name="L3"><text:list-level-style-number text:level="1" text:style-name="Numbering_20_Symbols" style:num-format="1"><style:list-level-properties text:space-before="0.25in" text:min-label-width="0.25in"/></text:list-level-style-number><text:list-level-style-number text:level="2" text:style-name="Numbering_20_Symbols" style:num-prefix=" " style:num-suffix="." style:num-format="1" text:display-levels="2"><style:list-level-properties text:space-before="0.5in" text:min-label-width="0.25in"/></text:list-level-style-number><text:list-level-style-number text:level="3" text:style-name="Numbering_20_Symbols" style:num-prefix=" " style:num-suffix=")" style:num-format="a"><style:list-level-properties text:space-before="0.75in" text:min-label-width="0.25in"/></text:list-level-style-number><text:list-level-style-bullet text:level="4" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="5" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1.25in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="6" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1.5in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="7" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1.75in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="8" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="2in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="9" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="2.25in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="10" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="2.5in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet></text:list-style><text:list-style style:name="L4"><text:list-level-style-number text:level="1" text:style-name="Numbering_20_Symbols" style:num-format="1"><style:list-level-properties text:space-before="0.25in" text:min-label-width="0.25in"/></text:list-level-style-number><text:list-level-style-number text:level="2" text:style-name="Numbering_20_Symbols" style:num-prefix=" " style:num-suffix="." style:num-format="1" text:display-levels="2"><style:list-level-properties text:space-before="0.5in" text:min-label-width="0.25in"/></text:list-level-style-number><text:list-level-style-number text:level="3" text:style-name="Numbering_20_Symbols" style:num-prefix=" " style:num-suffix=")" style:num-format="a"><style:list-level-properties text:space-before="0.75in" text:min-label-width="0.25in"/></text:list-level-style-number><text:list-level-style-bullet text:level="4" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="5" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1.25in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="6" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1.5in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="7" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="1.75in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="8" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="2in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="9" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="2.25in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet><text:list-level-style-bullet text:level="10" text:style-name="Bullet_20_Symbols" style:num-prefix=" " style:num-suffix=" " text:bullet-char="o"><style:list-level-properties text:space-before="2.5in" text:min-label-width="0.25in"/><style:text-properties style:font-name="StarSymbol"/></text:list-level-style-bullet></text:list-style></office:automatic-styles><office:body><office:text><text:sequence-decls><text:sequence-decl text:display-outline-level="0" text:name="Illustration"/><text:sequence-decl text:display-outline-level="0" text:name="Table"/><text:sequence-decl text:display-outline-level="0" text:name="Text"/><text:sequence-decl text:display-outline-level="0" text:name="Drawing"/></text:sequence-decls><text:p text:style-name="P1">Lesson 4</text:p><text:p text:style-name="Chapter_20_Title">Strings</text:p><text:p text:style-name="Body_20_Text_20_First">In earlier lessons, you used quoted character strings as part of each output operation. In this lesson, you will start to learn how to make your output a little fancier by doing more with strings. Start by reading Listing 4-1.</text:p><text:p text:style-name="Code_20_Caption"><text:hidden-text text:condition="ooow:" text:string-value=".cc" text:is-hidden="true"/>Listing 4-1. Different styles of string output.</text:p><text:p text:style-name="Code_20_First">#include &lt;iostream&gt;</text:p><text:p text:style-name="Code">#include &lt;ostream&gt;</text:p><text:p text:style-name="Code"/><text:p text:style-name="Code">int main()</text:p><text:p text:style-name="Code">{</text:p><text:p text:style-name="Code"><text:s text:c="3"/>std::cout &lt;&lt; &quot;Shape\tSides\n-----\t-----\n&quot;;</text:p><text:p text:style-name="Code"><text:s text:c="3"/>std::cout &lt;&lt; &quot;Square\t&quot; &lt;&lt; 4</text:p><text:p text:style-name="Code"><text:s text:c="13"/>&lt;&lt; &quot;\nCircle\t?\n&quot;;</text:p><text:p text:style-name="Code_20_Last">}</text:p><text:p text:style-name="P2">Predict the output from the program in Listing 4-1.<text:span text:style-name="T1"> </text:span><text:span text:style-name="T2">You might already know what </text:span><text:span text:style-name="T3">\t</text:span><text:span text:style-name="T2"> means, and so this prediction is easy to make. If you don't know, take a guess.</text:span></text:p><text:p text:style-name="Answer"><text:span text:style-name="T4"><text:tab/><text:tab/><text:tab/></text:span><text:tab/></text:p><text:p text:style-name="P2">Now check your answer. Were you correct? <text:span text:style-name="T5">So what does </text:span><text:span text:style-name="T6">\t</text:span><text:span text:style-name="T5"> mean?</text:span></text:p><text:p text:style-name="Answer"><text:span text:style-name="T4"><text:tab/></text:span><text:tab/></text:p><text:p text:style-name="Body_20_Text_20_Cont">Inside a string, the backslash (<text:span text:style-name="Code_20_Inline">\</text:span>) is a special, even magical, character. It changes the meaning of the character that follows it. You have already seen how <text:span text:style-name="Code_20_Inline">\n</text:span> starts a new line. Now you know that <text:span text:style-name="Code_20_Inline">\t</text:span> is a horizontal tab, that is, it aligns the subsequent output at a tab position. In a typical console, tab positions occur every eight spaces.</text:p><text:p text:style-name="Body_20_Text">How should you print a double-quote character in a string?</text:p><text:p text:style-name="Answer"><text:span text:style-name="T4"><text:tab/></text:span><text:tab/></text:p><text:p text:style-name="Answer"><text:span text:style-name="T4"><text:tab/></text:span><text:tab/></text:p><text:p text:style-name="Body_20_Text">Write a program to test your hypothesis. Run the program. Were you correct?</text:p><text:p text:style-name="Answer"><text:span text:style-name="T4"><text:tab/></text:span><text:tab/></text:p><text:p text:style-name="Body_20_Text">Compare your program with Listing 4-2.</text:p><text:p text:style-name="Code_20_Caption"><text:hidden-text text:condition="ooow:" text:string-value=".C" text:is-hidden="true"/>Listing 4-2. Print a double-quote character.</text:p><text:p text:style-name="Code_20_First">#include &lt;iostream&gt;</text:p><text:p text:style-name="Code">#include &lt;ostream&gt;</text:p><text:p text:style-name="Code"/><text:p text:style-name="Code">int main()</text:p><text:p text:style-name="Code">{</text:p><text:p text:style-name="Code"><text:s text:c="3"/>std::cout &lt;&lt; &quot;\&quot;\n&quot;;</text:p><text:p text:style-name="Code_20_Last">}</text:p><text:p text:style-name="Body_20_Text_20_Cont">In this case, the backslash turns a special character into a normal character. C++ recognizes a few other backslash character sequences, but these three are the most commonly used. (You'll learn a few more when you read about characters, in Lesson 26.)</text:p><text:p text:style-name="Body_20_Text">Now modify Listing 4-1 to add Triangle to the list of shapes.</text:p><text:p text:style-name="Body_20_Text">What does the output look like? Tabs do not automatically align columns, but merely position the output at a tab position. To align columns, you need to take control of the output. The easy way is to use multiple tab characters, as shown in Listing 4-3.</text:p><text:p text:style-name="Code_20_Caption">Listing 4-3. Adding Triangle, and keeping the columns aligned.</text:p><text:list text:style-name="L1"><text:list-item><text:p text:style-name="P3">#include &lt;iostream&gt;</text:p></text:list-item><text:list-item><text:p text:style-name="P4">#include &lt;ostream&gt;</text:p></text:list-item><text:list-item><text:p text:style-name="P4"/></text:list-item><text:list-item><text:p text:style-name="P4">int main()</text:p></text:list-item><text:list-item><text:p text:style-name="P4">{</text:p></text:list-item><text:list-item><text:p text:style-name="P4"><text:s text:c="3"/>std::cout &lt;&lt; &quot;Shape\t\tSides\n-----\t\t-----\n&quot;;</text:p></text:list-item><text:list-item><text:p text:style-name="P4"><text:s text:c="3"/>std::cout &lt;&lt; &quot;Square\t\t&quot; &lt;&lt; 4</text:p></text:list-item><text:list-item><text:p text:style-name="P4"><text:s text:c="13"/>&lt;&lt; &quot;\nCircle\t\t?\n&quot;</text:p></text:list-item><text:list-item><text:p text:style-name="P4"><text:s text:c="16"/>&quot;Triangle\t&quot; &lt;&lt; 3 &lt;&lt; &quot;\n&quot;;</text:p></text:list-item><text:list-item><text:p text:style-name="P5">}</text:p></text:list-item></text:list><text:p text:style-name="Body_20_Text">I played a trick on you in Listing 4-3. Look closely at the end of lines 8 and the start of line 9. Notice that the program lacks an output operator (<text:span text:style-name="Code_20_Inline">&lt;&lt;</text:span>) that ordinarily separates all output items. This trick applies only to strings. Anytime you have two (or more) adjacent character strings, the compiler automatically combines them into a single string. Thus, you can write Lines 8 and 9 in many different ways, all meaning exactly the same thing:</text:p><text:p text:style-name="Code_20_First">&lt;&lt; &quot;\nCircle\t\t?\n&quot; &quot;Triangle\t&quot; &lt;&lt; 3 &lt;&lt; &quot;\n&quot;;</text:p><text:p text:style-name="Code">&lt;&lt; &quot;\nCircle\t\t?\nTriangle\t&quot; &lt;&lt; 3 &lt;&lt; &quot;\n&quot;;</text:p><text:p text:style-name="Code_20_Last">&lt;&lt; &quot;\n&quot; &quot;Circle&quot; &quot;\t\t?\n&quot; &quot;Triangle&quot; &quot;\t&quot; &lt;&lt; 3 &lt;&lt; &quot;\n&quot;;</text:p><text:p text:style-name="Body_20_Text">Choose the style that you like best, and stick with it. I like to make a clear break after each newline, so the human who reads my programs can tell where each line ends and a new line begins.</text:p><text:p text:style-name="Body_20_Text">You might be asking yourself why I bothered to print the numbers separately, instead of printing one big string. That's a good question. In a real program, printing a single string would be best, but in this book, I want to keep reminding you about the various ways you can write an output statement. Imagine, for example, what you would do if you didn't know beforehand the name of a shape and its number of sides. Perhaps that information is stored in variables, as shown in Listing 4-4.</text:p><text:p text:style-name="Code_20_Caption"><text:hidden-text text:condition="ooow:" text:string-value=".cxx" text:is-hidden="true"/>Listing 4-4. Printing information that is stored in variables.</text:p><text:list text:style-name="L2"><text:list-item><text:p text:style-name="P6">#include &lt;iostream&gt;</text:p></text:list-item><text:list-item><text:p text:style-name="P7">#include &lt;ostream&gt;</text:p></text:list-item><text:list-item><text:p text:style-name="P7">#include &lt;string&gt;</text:p></text:list-item><text:list-item><text:p text:style-name="P7"/></text:list-item><text:list-item><text:p text:style-name="P7">int main()</text:p></text:list-item><text:list-item><text:p text:style-name="P7">{</text:p></text:list-item><text:list-item><text:p text:style-name="P7"><text:s text:c="3"/>std::string shape(&quot;Triangle&quot;);</text:p></text:list-item><text:list-item><text:p text:style-name="P7"><text:s text:c="3"/>int sides(3);</text:p></text:list-item><text:list-item><text:p text:style-name="P7"/></text:list-item><text:list-item><text:p text:style-name="P7"><text:s text:c="3"/>std::cout &lt;&lt; &quot;Shape\t\tSides\n-----\t\t-----\n&quot;;</text:p></text:list-item><text:list-item><text:p text:style-name="P7"><text:s text:c="3"/>std::cout &lt;&lt; &quot;Square\t\t&quot; &lt;&lt; 4</text:p></text:list-item><text:list-item><text:p text:style-name="P7"><text:s text:c="13"/>&lt;&lt; &quot;\nCircle\t\t?\n&quot;;</text:p></text:list-item><text:list-item><text:p text:style-name="P7"><text:s text:c="3"/>std::cout &lt;&lt; shape &lt;&lt; &quot;\t&quot; &lt;&lt; sides &lt;&lt; &quot;\n&quot;;</text:p></text:list-item><text:list-item><text:p text:style-name="P8">}</text:p></text:list-item></text:list><text:p text:style-name="Body_20_Text">The type of a string is <text:span text:style-name="Code_20_Inline">std::string</text:span>. You must have <text:span text:style-name="Code_20_Inline">#include</text:span> <text:span text:style-name="Source_20_Text">&lt;string&gt;</text:span> near the top of your program, to tell the compiler that you are using the <text:span text:style-name="Code_20_Inline">std::string</text:span> type. Line 7 shows one way to give an initial value to a string variable. Sometimes, you want the variable to start out empty. <text:span text:style-name="T5">How do you think you would declare an empty string variable? Write a program to test your hypothesis.</text:span></text:p><text:p text:style-name="Body_20_Text">If you have trouble verifying that the string is truly empty, try printing the string between two other, non-empty strings. Listing 4-5 shows an example.</text:p><text:p text:style-name="Code_20_Caption">Listing 4-5. Declaring and printing an empty string.</text:p><text:list text:style-name="L3"><text:list-item><text:p text:style-name="P9">#include &lt;iostream&gt;</text:p></text:list-item><text:list-item><text:p text:style-name="P10">#include &lt;ostream&gt;</text:p></text:list-item><text:list-item><text:p text:style-name="P10">#include &lt;string&gt;</text:p></text:list-item><text:list-item><text:p text:style-name="P10"/></text:list-item><text:list-item><text:p text:style-name="P10">int main()</text:p></text:list-item><text:list-item><text:p text:style-name="P10">{</text:p></text:list-item><text:list-item><text:p text:style-name="P10"><text:s text:c="3"/>std::string empty;</text:p></text:list-item><text:list-item><text:p text:style-name="P10"><text:s text:c="3"/>std::cout &lt;&lt; &quot;|&quot; &lt;&lt; empty &lt;&lt; &quot;|\n&quot;;</text:p></text:list-item><text:list-item><text:p text:style-name="P11">}</text:p></text:list-item></text:list><text:p text:style-name="Body_20_Text">Compare your program with Listing 4-5. <text:span text:style-name="T5">Which do you prefer?</text:span></text:p><text:p text:style-name="P12"><text:tab/></text:p><text:p text:style-name="Body_20_Text">Why?</text:p><text:p text:style-name="P12"><text:tab/></text:p><text:p text:style-name="P12"><text:tab/></text:p><text:p text:style-name="Body_20_Text">When you declare a string variable with no initial value, C++ guarantees that the string is initially empty. <text:span text:style-name="T5">What do you think happens when you declare an </text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T5"> variable with no initial value?</text:span></text:p><text:p text:style-name="P12"><text:tab/></text:p><text:p text:style-name="P12"><text:tab/></text:p><text:p text:style-name="Body_20_Text"><text:span text:style-name="T5">Write a program to test your hypothesis.</text:span> (Even if the compiler issues a warning, run the program anyway.)</text:p><text:p text:style-name="Body_20_Text">What happened? Explain.</text:p><text:p text:style-name="P12"><text:tab/></text:p><text:p text:style-name="P12"><text:tab/></text:p><text:p text:style-name="P12"><text:tab/></text:p><text:p text:style-name="Body_20_Text">Your program probably looks like Listing 4-6.</text:p><text:p text:style-name="Code_20_Caption">Listing 4-6. Demonstrating an uninitialized variable.</text:p><text:list text:style-name="L4"><text:list-item><text:p text:style-name="P13">#include &lt;iostream&gt;</text:p></text:list-item><text:list-item><text:p text:style-name="P14">#include &lt;ostream&gt;</text:p></text:list-item><text:list-item><text:p text:style-name="P14"/></text:list-item><text:list-item><text:p text:style-name="P15">int main()</text:p></text:list-item><text:list-item><text:p text:style-name="P14">{</text:p></text:list-item><text:list-item><text:p text:style-name="P14"><text:s text:c="3"/>int unknown;</text:p></text:list-item><text:list-item><text:p text:style-name="P14"><text:s text:c="3"/>std::cout &lt;&lt; unknown &lt;&lt; &quot;\n&quot;;</text:p></text:list-item><text:list-item><text:p text:style-name="P16">}</text:p></text:list-item></text:list><text:p text:style-name="Body_20_Text">When I run Listing 4-6, I get different answers, depending on the compiler and platform. Some of the answers I get are:</text:p><text:p text:style-name="Results_20_First">0</text:p><text:p text:style-name="Results">1073831104</text:p><text:p text:style-name="Results">1</text:p><text:p text:style-name="Results_20_Last">-858993460</text:p><text:p text:style-name="Body_20_Text_20_Cont">Isn't that curious? If you do not supply an initial value for a variable of type <text:span text:style-name="Code_20_Inline">std::string</text:span>, C++ makes sure the variable starts out with an initial value, namely, an empty string. On the other hand, if the variable has type <text:span text:style-name="Code_20_Inline">int</text:span>, you cannot tell what the initial value will actually be.</text:p><text:p text:style-name="Body_20_Text">The rule in C++ is that the compiler and library do not do any extra work if they can avoid it. Only the programmer knows what value makes sense as a variable's initial value, so assigning that initial value must be the programmer's responsibility. After all, when you are putting the finishing touches on your climate simulator (the one that will prove once and for all that politicians' hot air are increasing the global mean temperature), you don't want the inner loop burdened by even one wasteful instruction.</text:p><text:p text:style-name="Body_20_Text">So what's the deal with <text:span text:style-name="Code_20_Inline">std::string</text:span>? The short answer is that complicated types, such as strings, are different from the simple, built-in types. For types such as <text:span text:style-name="Source_20_Text">std::string</text:span>, it is actually simpler for the C++ library to provide a well-defined initial value. The containers, such as <text:span text:style-name="Code_20_Inline">std::vector</text:span>, behave the same way: no initial value means empty.</text:p><text:p text:style-name="Body_20_Text">If you have trouble remembering when it is safe to declare a variable without an initial value, play it safe and provide an initial value:</text:p><text:p text:style-name="Code_20_First"><text:hidden-text text:condition="ooow:" text:string-value=".cp" text:is-hidden="true"/>std::string empty(&quot;&quot;);</text:p><text:p text:style-name="Code_20_Last">int zero(0);</text:p></office:text></office:body></office:document-content>
